@using System.Data.SqlClient
@using Global5.Controllers.Configuration
@using System.Data

<h3>Material</h3>


<div>
    <div style="float:left; width:30%">
        <table class="table">
            <tbody>
                <tr>
                    <td>
                        <input placeholder="Descrição" type="text" class="form-control mb-md-3" @bind="@materialCad.str_descricao" @bind:event="oninput" />
                        <input placeholder="Valor" type="text" class="form-control mb-md-3" @bind="@materialCad.dec_valor" @bind:event="oninput" />
                        <input placeholder="Estoque Inical" type="text" class="form-control mb-md-3" @bind="@materialCad.int_estoque_incial" @bind:event="oninput" />

                    </td>
                </tr>
                <tr>

                    <td>

                        @if (visibleAdd)
                        {
                            <button visible="@(visibleAdd)" type="submit" @onclick="CadastrarMaterial" class="btn-primary">Cadastrar</button>
                        }
                        else if (visibleEdit)
                        {
                            <button visible="@(visibleEdit)" @onclick="AtualizaMaterial" class="btn-primary">Editar</button>
                        }

                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div style="float:right; width:70%; padding-left: 10px">
        <table border="1">
            <thead>
                <tr>
                    <th>Código</th>
                    <th>Descrição</th>
                    <th>Valor R$</th>
                    <th>Estoque Inicial</th>

                    <th>Edição</th>
                    <th>Exclusão</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in materialList)
                {
                    <tr>
                        <th>@item.int_id</th>
                        <td>@item.str_descricao</td>
                        <td>@item.dec_valor</td>
                        <td>@item.int_estoque_incial</td>
                        <td> <button @onclick="(() => CarregaFornecedor(item))" class="btn-primary">Editar</button> </td>
                        <td> <button @onclick="(() => DeleteMaterial(item.int_id.ToString()))" class="btn-primary">Excluir</button> </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</div>


@code {
    private bool visibleEdit { get; set; } = true;
    private bool visibleAdd { get; set; } = false;
    private Models.crud.Material? materialCad { get; set; } = new Models.crud.Material();
    private List<Models.crud.Material> materialList = new List<Models.crud.Material>();

    protected override async Task OnInitializedAsync()
    {
        visibleAdd = true;
        visibleEdit = false;

        using (SqlConnection conn = new SqlConnection(ConfigurationBase.ConnectionString))
        {
            materialList = new List<Models.crud.Material>();
            conn.Open();
            SqlCommand cmd = new SqlCommand("sp_ConsultaMaterial", conn);
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.Add(new SqlParameter("int_id", null));
            using (SqlDataReader rdr = cmd.ExecuteReader())
            {
                while (rdr.Read())
                {
                    materialList.Add(new Models.crud.Material
                        {
                            int_id = (int)rdr["int_id"],
                            str_descricao = (string)rdr["str_descricao"],
                            dec_valor = (decimal)rdr["dec_valor"],
                            int_estoque_incial = (int)rdr["int_estoque_incial"]
                        });
                }
            }
        }

        materialCad = new Models.crud.Material();
    }

    private void CadastrarMaterial()
    {
        visibleAdd = true;
        visibleEdit = false;

        using (SqlConnection conn = new SqlConnection(ConfigurationBase.ConnectionString))
        {
            conn.Open();
            SqlCommand cmd = new SqlCommand("sp_CadastraMaterial", conn);
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.Add(new SqlParameter("str_descricao", materialCad?.str_descricao ?? string.Empty));
            cmd.Parameters.Add(new SqlParameter("dec_valor", materialCad?.dec_valor.ToString() ?? "0"));
            cmd.Parameters.Add(new SqlParameter("int_estoque_incial", materialCad?.int_estoque_incial ?? 0));

            cmd.ExecuteReader();
        }

        OnInitializedAsync();
    }

    private void DeleteMaterial(string id)
    {
        visibleAdd = true;
        visibleEdit = false;

        using (SqlConnection conn = new SqlConnection(ConfigurationBase.ConnectionString))
        {
            conn.Open();
            SqlCommand cmd = new SqlCommand("sp_ExcluiMaterial", conn);
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.Add(new SqlParameter("int_id", id));
            cmd.ExecuteReader();
        }
        OnInitializedAsync();
    }

    private void CarregaFornecedor(Models.crud.Material materialCarrega)
    {
        visibleAdd = false;
        visibleEdit = true;
        materialCad = materialCarrega;
    }

    private void AtualizaMaterial()
    {
        visibleAdd = true;
        visibleEdit = false;

        using (SqlConnection conn = new SqlConnection(ConfigurationBase.ConnectionString))
        {
            conn.Open();
            SqlCommand cmd = new SqlCommand("sp_AtualizaMaterial", conn);
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.Add(new SqlParameter("int_id", materialCad?.int_id ?? 0));
            cmd.Parameters.Add(new SqlParameter("str_descricao", materialCad?.str_descricao ?? string.Empty));
            cmd.Parameters.Add(new SqlParameter("dec_valor", materialCad?.dec_valor ?? decimal.Parse("0")));
            cmd.Parameters.Add(new SqlParameter("int_estoque_incial", materialCad?.int_estoque_incial ?? 0));
            cmd.ExecuteReader();
        }
        OnInitializedAsync();
    }

}
